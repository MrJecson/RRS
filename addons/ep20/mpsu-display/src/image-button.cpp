//-----------------------------------------------------------------------------
//
//      Класс картинки-кнопки и обработкой нажатия
//      (c) РГУПС, ВЖД 02/03/2017
//      Разработал: Ковшиков С. В.
//
//-----------------------------------------------------------------------------
/*!
 *  \file
 *  \brief Класс картинки-кнопки с обработкой нажатия
 *  \copyright РГУПС, ВЖД
 *  \author Ковшиков С. В.
 *  \date 02/03/2017
 */

#include <image-button.h>

#include <QStaticText>
#include <QPainter>
#include <QMouseEvent>


//-----------------------------------------------------------------------------
// КОНСТРУКТОР
//-----------------------------------------------------------------------------
ImageButton::ImageButton(QString butName, QWidget *parent)
    : QLabel(parent)
    , id_(Local::biNULL_ID)
    , imageName_(butName)    // Устанавливаем имя картинки
    , pressed_("")
    , released_("")
{

}



//-----------------------------------------------------------------------------
// ДЕСТРУКТОР
//-----------------------------------------------------------------------------
ImageButton::~ImageButton()
{

}



//-----------------------------------------------------------------------------
// Установить имена картинок
//-----------------------------------------------------------------------------
void ImageButton::setImagesNames(QString pressed, QString released)
{
    pressed_ = pressed;
    released_ = released;

    // Устанавливаем картинку
    this->setImage_(released);
}



//-----------------------------------------------------------------------------
// Установить идентификатор
//-----------------------------------------------------------------------------
void ImageButton::setId(Local::ButtonId id)
{
    id_ = id;
}



//-----------------------------------------------------------------------------
// (слот) Обработка нажатия кнопок мыши
//-----------------------------------------------------------------------------
void ImageButton::mousePressEvent(QMouseEvent *e)
{
    // Если не "пустая" кнопка (не чёрная заглушка)
    if (imageName_ != "" && imageName_ != "none")
    {
        if (e->button() == Qt::LeftButton) // Если левая кнопка мыши
        {
            // Устанавливаем картинку
            setImage_(pressed_);
            // Передаём сигнал, что кнопка нажата
            emit sendPressed(id_);
        }
        else // Если не левая кнопка мыши
        {
            // Игнорируем событие
            e->ignore();
        }
    }
}



//-----------------------------------------------------------------------------
// (слот) Обработка отжатия кнопок мыши
//-----------------------------------------------------------------------------
void ImageButton::mouseReleaseEvent(QMouseEvent *e)
{
    // Если не "пустая" кнопка (не чёрная заглушка)
    if (imageName_ != "" && imageName_ != "none")
    {
        if (e->button() == Qt::LeftButton) // Если левая кнопка мыши
        {
            // Устанавливаем картинку
            setImage_(released_);
            // Передаём сигнал, что кнопка отжата
            emit sendReleased(id_);
        }
        else // Если не левая кнопка мыши
        {
            // Игнорируем событие
            e->ignore();
        }
    }
}



//-----------------------------------------------------------------------------
// Установка картинки
//-----------------------------------------------------------------------------
void ImageButton::setImage_(QString imgName)
{
    QPixmap pix;

    if (QFile::exists(imgName)) // Если файл есть в ресурсах
    {
        // Грузим картинку в пиксмэп
        pix.load(imgName);
    }
    else // Если файла в ресурсах нет
    {
        // Грузим картинку ошибки в пиксмэп
        errorImage_(pix);
        // Устанавливаем подсказку на данную кнопку
        this->setToolTip(imgName);
    }

    // Устанавливаем "пиксмэп" на себя
    this->setPixmap(pix.scaled(this->width(), this->height()));
}



//-----------------------------------------------------------------------------
// Получение имени картинки
//-----------------------------------------------------------------------------
QString ImageButton::imageName()
{
    return imageName_;
}



//-----------------------------------------------------------------------------
// Метод создания картинки с ошибкой
//-----------------------------------------------------------------------------
void ImageButton::errorImage_(QPixmap &pix)
{
    QImage img(this->size(), QImage::Format_ARGB32_Premultiplied);
    img.fill(Qt::black);
    pix = QPixmap::fromImage(img);
    // Передаем пиксмэп в "рисователь"
    QPainter p(&pix);
    // Берем красное перо 2px
    p.setPen(QPen(QColor(255, 0, 0), 2));
    // Рисуем рамку и линию
    p.drawRect(1, 1, this->width() - 2, this->height() - 2);
    p.drawLine(0, 0, this->width(), this->height());
    // Устанавливаем перо на "рисователь"
    p.setPen(QPen(QColor(255, 255, 255), 12));
    // Создаём статический текст
    QStaticText errText("no image");
    // Рисуем текст на картинке
    p.drawStaticText((this->width() - 42) / 2,
                     (this->height() - 12) / 2,
                     errText);
}
